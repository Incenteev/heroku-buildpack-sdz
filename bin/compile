#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e
set -o pipefail

# START CONFIG
NGINX_VERSION=1.0.11
PHP_VERSION=5.3.9
S3_BUCKET=simpleit-heroku-builds
# END CONFIG


#
NGINX_URL="https://${S3_BUCKET}.s3.amazonaws.com/nginx-${NGINX_VERSION}-heroku.tar.gz"
PHP_URL="https://${S3_BUCKET}.s3.amazonaws.com/php-${PHP_VERSION}-with-fpm-heroku.tar.gz"
#

NGINX_PATH="vendor/nginx"
PHP_PATH="vendor/php"


function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(dirname $0)
LP_DIR=`cd $(dirname $0); cd ..; pwd`

#echo "BUILD_DIR: $BUILD_DIR"
#echo "CACHE_DIR: $CACHE_DIR"
#echo "BIN_DIR: $BIN_DIR"
#echo "LP_DIR: $LP_DIR"

mkdir -p $BUILD_DIR $CACHE_DIR

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .
mv www/conf ./


# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

# unpack cache
if [ ! -d vendor ]; then
  mkdir vendor
fi

#echo "-> LISTFILES"
#echo "-> Builddir:"
#ls -lR .

#echo "-> Cachedir:"
#ls -lR $CACHE_DIR

#for DIR in $NGINX_PATH $PHP_PATH ; do
#  rm -rf $DIR
#  if [ -d $CACHE_DIR/$DIR ]; then
#    cp -r $CACHE_DIR/$DIR $DIR
#  fi  
#done

#echo "-> LISTFILES"
#echo "-> Builddir:"
#ls -lR .
#
#echo "-> Cachedir:"
#ls -lR $CACHE_DIR

# Nginx

echo "-----> Installing Nginx"
cd ${BUILD_DIR}
if [ ! -d $NGINX_PATH ]; then
  echo "-----> Bundling Nginx v${NGINX_VERSION}"
  mkdir -p $NGINX_PATH && cd $NGINX_PATH
  curl --silent --max-time 60 --location $NGINX_URL | tar xz
fi

# PHP
echo "-----> Installing PHP"
cd ${BUILD_DIR}
if [ ! -d $PHP_PATH ]; then
  echo "-----> Bundling PHP v${PHP_VERSION}"
  mkdir -p $PHP_PATH && cd $PHP_PATH
  curl --silent --max-time 300 --location $PHP_URL | tar xz
fi

cd $BUILD_DIR

#echo "-> LISTFILES"
#echo "-> Builddir:"
#ls -lR .

#echo "-> Cachedir:"
#ls -lR $CACHE_DIR

# update config files
cp conf/php-fpm.conf $PHP_PATH/etc/php-fmp.conf
cp conf/php.ini $PHP_PATH/php.ini
erb conf/nginx.conf.erb > $NGINX_PATH/conf/nginx.conf

# setup web script. php-cgi relies on PHP_FCGI_CHILDREN=5 PHP_FCGI_MAX_REQUESTS=1000, set in 'bin/release'
echo "-----> Installing boot script"
cd $BUILD_DIR

#mkdir -p bin
#ln -s /app/${PHP_PATH}/bin/php bin/php
#ln -s /app/${PHP_PATH}/sbin/php-fpm bin/php-fpm
#ln -s /app/${NGINX_PATH}/sbin/nginx bin/nginx


cat >>boot.sh <<EOF
#!/usr/bin/env bash

export PATH=/app/vendor/nginx/sbin:/app/vendor/php/bin:/app/vendor/php/sbin:/usr/local/bin:/usr/bin:/bin:$PATH

echo "Booting nginx"

cp /app/conf/php-fpm.conf /app/vendor/php/etc/php-fpm.conf
cp /app/vendor/php/share/php/fpm/status.html /app/status.html
cp /app/conf/php.ini /app/vendor/php/php.ini
erb /app/conf/nginx.conf.erb > /app/vendor/nginx/conf/nginx.conf

touch /app/vendor/nginx/logs/access.log /app/vendor/nginx/logs/error.log
mkdir -p client_body_temp fastcgi_temp proxy_temp scgi_temp uwsgi_temp
(tail -f -n 0 /app/vendor/nginx/logs/*.log &)

php-fpm
nginx
EOF
chmod +x boot.sh

echo "-----> Done with compile"
